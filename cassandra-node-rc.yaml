heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Cassandra node

parameters:

  node_hostname:
    type: string
    default: cassandra-node

  image:
    description: Server Image used for all servers.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    description: Web Cloud Server flavor
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  # SSH Keypair
  ssh_keypair_name:
    description: "keypair name to register with Nova for the root SSH key"
    type: string

  ssh_public_key:
    type: string

  ssh_private_key:
    type: string

  seed:
    description: Seed node IP address
    type: string

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rackspace-orchestration-templates/cassandra

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 12.3.0

  stack_id:
    description: Stack ID
    type: string

  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
    immutable: true
resources:

  node_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: node_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }
      networks:
      - network: { get_param: rc_network_name }
      - network: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: "stack_id" }

  seed_node_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on:
    - node_server
    properties:
      server_id: { get_resource: node_server }

  node_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: node_server
    properties:
      username: root
      private_key: { get_param: ssh_private_key }
      host: { get_attr: [node_server, networks, private, 0] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        cassandra:
          cluster_name: { get_param: "stack_id" }
          listen_address: { get_attr: [node_server, networks, private, 0] }
          broadcast_address: { get_attr: [node_server, networks, private, 0] }
          rpc_address: { get_attr: [node_server, networks, private, 0] }
          seeds: [ { get_param: seed } ]
        java:
          jdk_version: 7
        rax:
          firewall:
            tcp: [22, 7000]
          disk_config:
            mount_point: /var/lib/cassandra
        run_list: ["recipe[apt]",
                   "recipe[rax-disk-config]",
                   "recipe[cassandra::datastax]",
                   "recipe[firewall]",
                   "recipe[rax-firewall]"]

outputs:
  public_ip:
    description: "Public IP of Cassandra node"
    value: { get_attr: [node_server, accessIPv4] }

  private_ip:
    description: "Private IP of Cassandra node"
    value: { get_attr: [node_server, networks, private, 0] }
